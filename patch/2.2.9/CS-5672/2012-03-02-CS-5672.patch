Index: eXoApplication/calendar/webapp/src/main/java/org/exoplatform/calendar/webui/UIMonthView.java
===================================================================
--- eXoApplication/calendar/webapp/src/main/java/org/exoplatform/calendar/webui/UIMonthView.java	(revision 79915)
+++ eXoApplication/calendar/webapp/src/main/java/org/exoplatform/calendar/webui/UIMonthView.java	(working copy)
@@ -22,6 +22,7 @@
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.TimeZone;
 
 import javax.jcr.PathNotFoundException;
 
@@ -100,15 +101,30 @@
     List<CalendarEvent> allEvents = calendarService.getEvents(username, eventQuery, getPublicCalendars()) ;
     
     String timezone = CalendarUtils.getCurrentUserCalendarSetting().getTimeZone();
-    List<CalendarEvent> originalRecurEvents = calendarService.getOriginalRecurrenceEvents(username, eventQuery.getFromDate(), eventQuery.getToDate(), getPublicCalendars());    
+    List<CalendarEvent> originalRecurEvents = calendarService.getOriginalRecurrenceEvents(username, eventQuery.getFromDate(), eventQuery.getToDate(), getPublicCalendars());
     if (originalRecurEvents != null && originalRecurEvents.size() > 0) {
+      TimeZone tz = TimeZone.getTimeZone(timezone);
+      Calendar cal = Calendar.getInstance();
       Iterator<CalendarEvent> recurEventsIter = originalRecurEvents.iterator();
       while (recurEventsIter.hasNext()) {
         CalendarEvent recurEvent = recurEventsIter.next();
         Map<String,CalendarEvent> tempMap = calendarService.getOccurrenceEvents(recurEvent, eventQuery.getFromDate(), eventQuery.getToDate(), timezone);
         if (tempMap != null) {
           recurrenceEventsMap.put(recurEvent.getId(), tempMap);
-          allEvents.addAll(tempMap.values());
+          
+          for(CalendarEvent event : tempMap.values()){
+            if(tz.inDaylightTime(event.getFromDateTime())){
+              cal.setTime(event.getFromDateTime());
+              cal.add(Calendar.HOUR, -1);
+              event.setFromDateTime(cal.getTime());
+            }
+            if(tz.inDaylightTime(event.getToDateTime())){
+              cal.setTime(event.getToDateTime());
+              cal.add(Calendar.HOUR, -1);
+              event.setToDateTime(cal.getTime());
+            }
+            allEvents.add(event);
+          }
         }
       }
     }
